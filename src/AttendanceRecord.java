
import General.AttendanceList;
import General.ConnectionProvider;
import General.EmployeeList;
import General.Utils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class AttendanceRecord extends javax.swing.JFrame {
     private Connection con;
    private PreparedStatement ps;
    private ResultSet rs;
    private EmployeeList employee_list;
    private int employee_id;
    private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    private AttendanceList attendance_list;
    private DefaultTableModel model;
    private ArrayList<AttendanceList> attendanceArrayList;
    /**
     * Creates new form AttendanceRecord
     */
    public AttendanceRecord() {
        initComponents();
         try {
             showAttendanceRecord();
         } catch (SQLException ex) {
             Logger.getLogger(AttendanceRecord.class.getName()).log(Level.SEVERE, null, ex);
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attendance_list_table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        date_chooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(77, 114, 152));
        jPanel1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        attendance_list_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee", "Date", "Time In", "Time Out", "Attendance ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        attendance_list_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendance_list_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(attendance_list_table);
        if (attendance_list_table.getColumnModel().getColumnCount() > 0) {
            attendance_list_table.getColumnModel().getColumn(0).setResizable(false);
            attendance_list_table.getColumnModel().getColumn(1).setResizable(false);
            attendance_list_table.getColumnModel().getColumn(2).setResizable(false);
            attendance_list_table.getColumnModel().getColumn(3).setResizable(false);
            attendance_list_table.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 820, 440));

        jPanel2.setBackground(new java.awt.Color(119, 166, 182));

        jButton2.setBackground(new java.awt.Color(208, 239, 177));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        jLabel1.setText("EMPLOYEE MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel1))
                .addGap(33, 33, 33))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 110));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 51, 51));
        jButton3.setText("Remove Attendance");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 40));
        jPanel1.add(date_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, 200, 30));

        jButton1.setText("Search Date");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 163, -1, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 863, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 701, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private ArrayList<AttendanceList> getAttendanceList() throws SQLException {
         try {
             attendanceArrayList = new ArrayList<>();
             AttendanceList attendance_list;
             
             // Create the SQL query without placeholders
             String selectQuery = "SELECT attendance.*, employee.full_name " +
                     "FROM attendance " +
                     "JOIN employee ON attendance.employee_id = employee.id_number";
             
             // Create a connection
             ConnectionProvider dbc = new ConnectionProvider();
             String jdbcDriver = dbc.getJdbcDriver();
             String dbConnectionURL = dbc.getDbConnectionURL();
             String dbUsername = dbc.getDbUsername();
             String dbPassword = dbc.getDbPassword();
             Class.forName(jdbcDriver);
             con = DriverManager.getConnection(dbConnectionURL, dbUsername, dbPassword);
             
             // Create the Statement
             Statement statement = con.createStatement();
             
             // Execute the query
             ResultSet rs = statement.executeQuery(selectQuery);
             
             while (rs.next()) {
                 attendance_list = new AttendanceList(rs.getDate("date"), rs.getTime("time_in"), rs.getTime("time_out"),rs.getString("full_name"), rs.getInt("attendance_id"));
                 attendanceArrayList.add(attendance_list);
             }
             
             // Close resources
             statement.close();
             con.close();
             
             return attendanceArrayList;
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(AttendanceRecord.class.getName()).log(Level.SEVERE, null, ex);
         }
    return null;
}
    public void showAttendanceRecord() throws SQLException{
         attendanceArrayList = this.getAttendanceList();
        model = (DefaultTableModel)this.attendance_list_table.getModel();
         Object[] row = new Object[5];
         
         model.setRowCount(0);
         
         
          for(int i = 0; i < attendanceArrayList.size(); i++){
              // Make the date as a readable string format
             String formattedDate = dateFormat.format(attendanceArrayList.get(i).getDate());
             
             String formattedTimeIn = Utils.convertTimeToReadable(attendanceArrayList.get(i).getTimeIn());
             String formattedTimeOut = Utils.convertTimeToReadable(attendanceArrayList.get(i).getTimeOut());

//            System.out.println(pendingArrayList.get(i).getTime());
            row[0] = attendanceArrayList.get(i).getEmployeeName();
            row[1] = formattedDate;
            row[2] = formattedTimeIn;
            row[3] = formattedTimeOut;
            row[4] = attendanceArrayList.get(i).getAttendanceId();
            model.addRow(row);
        }
          TableColumnModel columnModel = this.attendance_list_table.getColumnModel();
          Utils.setColumnWidthZero(columnModel, 4);
         
    }
    private void attendance_list_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendance_list_tableMouseClicked
        //         DefaultTableModel RecordTable = (DefaultTableModel) this.employeeListTable.getModel();
        //    int SelectedRows = this.employeeListTable.getSelectedRow();
        //    employee_id_field.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        //     name_field.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        //    address_field.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        //    phone_field.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        //    gender_combo_box.setSelectedItem(RecordTable.getValueAt(SelectedRows, 4).toString());
    }//GEN-LAST:event_attendance_list_tableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int deleteItem;
        DefaultTableModel RecordTable = (DefaultTableModel) this.attendance_list_table.getModel();
        int selectedRow = this.attendance_list_table.getSelectedRow();
        int attendance_id= Integer.valueOf(this.attendance_list_table.getValueAt(selectedRow, 4).toString());

        try {
            deleteItem = JOptionPane.showConfirmDialog(null, "Confirm if you want to delete item ", "warning", JOptionPane.YES_NO_OPTION);

            if (deleteItem == JOptionPane.YES_OPTION) {

                // Create the SQL query with placeholders
                String deleteQuery = "DELETE FROM attendance WHERE attendance_id = ?";

                // Create a connection
                ConnectionProvider dbc = new ConnectionProvider();
                String jdbcDriver = dbc.getJdbcDriver();
                String dbConnectionURL = dbc.getDbConnectionURL();
                String dbUsername = dbc.getDbUsername();
                String dbPassword = dbc.getDbPassword();
                Class.forName(jdbcDriver);
                Connection connection = DriverManager.getConnection(dbConnectionURL, dbUsername, dbPassword);

                // Create the PreparedStatement
                PreparedStatement statement = connection.prepareStatement(deleteQuery);
                statement.setInt(1, attendance_id);

                // Execute the DELETE query
                int rowsAffected = statement.executeUpdate();

                if (rowsAffected > 0) {
                    showAttendanceRecord();
                } else {
                    System.out.println("No record found with the given id_number.");
                }

            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.util.Date selectedDate = this.date_chooser.getDate();
        String formattedDate = dateFormat.format(selectedDate);
        Utils.filterSearch(formattedDate, attendance_list_table,1);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendanceRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendanceRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendanceRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendanceRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendanceRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable attendance_list_table;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
