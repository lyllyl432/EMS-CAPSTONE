/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import General.AttendanceList;
import General.ConnectionProvider;
import General.EmployeeList;
import General.Utils;
import java.awt.Image;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author HP
 */


public class EmployeeAttendance extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeAttendance
     */
    private Connection con;
    private PreparedStatement ps;
    private ResultSet rs;
    private EmployeeList employee_list;
    private int employee_id;
    private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    private AttendanceList attendance_list;
    private DefaultTableModel model;
    private ArrayList<AttendanceList> attendanceArrayList;
    public EmployeeAttendance() {
        initComponents();
    }
    public EmployeeAttendance(EmployeeList employee_list) throws SQLException {
        initComponents();
        this.employee_list = employee_list;
        this.employee_id = Integer.parseInt(employee_list.getIdNumber());
        fillEmployeeInformation();
        showEmployeeAttendance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attendance_list_table = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        name_label = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        address_label = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        phone_number_label = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        gender_label = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        department_label = new javax.swing.JLabel();
        file_label = new javax.swing.JLabel();
        date_chooser = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(77, 114, 152));
        jPanel1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        attendance_list_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time In", "Time Out"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        attendance_list_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendance_list_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(attendance_list_table);
        if (attendance_list_table.getColumnModel().getColumnCount() > 0) {
            attendance_list_table.getColumnModel().getColumn(0).setResizable(false);
            attendance_list_table.getColumnModel().getColumn(1).setResizable(false);
            attendance_list_table.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 820, 330));

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(51, 51, 51));
        jButton4.setText("Time In");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, 40));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("Time Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, -1, 40));

        jPanel2.setBackground(new java.awt.Color(119, 166, 182));

        jButton2.setBackground(new java.awt.Color(208, 239, 177));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        jLabel1.setText("EMPLOYEE MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel1))
                .addGap(33, 33, 33))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 110));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Name :");

        name_label.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        name_label.setText("jLabel3");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Address :");

        address_label.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        address_label.setText("jLabel3");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Phone Number :");

        phone_number_label.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        phone_number_label.setText("jLabel3");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Gender :");

        gender_label.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        gender_label.setText("jLabel3");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Department :");

        department_label.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        department_label.setText("jLabel3");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(file_label, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(address_label, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(name_label, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(172, 172, 172)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(37, 37, 37)
                                .addComponent(gender_label))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(department_label)))
                        .addGap(212, 212, 212))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(phone_number_label)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name_label)
                    .addComponent(jLabel8)
                    .addComponent(gender_label))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(address_label)
                    .addComponent(jLabel10)
                    .addComponent(department_label))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone_number_label)
                    .addComponent(jLabel6))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(file_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 870, 160));
        jPanel1.add(date_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 302, 170, 30));

        jButton3.setText("Search Date");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 310, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 869, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 6, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 701, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillEmployeeInformation(){
        this.name_label.setText(this.employee_list.getName());
        this.address_label.setText(this.employee_list.getAddress());
        this.gender_label.setText(this.employee_list.getGender());
        this.department_label.setText(this.employee_list.getDepartment());
        this.phone_number_label.setText(this.employee_list.getPhoneNumber());
        
        //get the latest image file path from user_info
        ImageIcon original_icon = new ImageIcon(this.employee_list.getProfilePicture());
        
        //resize the image
        Image original_image = original_icon.getImage();
        Image resized_image = original_image.getScaledInstance(150, 100, Image.SCALE_SMOOTH);
        //set the icon to the image label
        ImageIcon resized_icon = new ImageIcon(resized_image);
        this.file_label.setIcon(resized_icon);
    }
    
    private ArrayList<AttendanceList> getAttendanceList() throws SQLException{
        try {
            attendanceArrayList = new ArrayList<>();
            AttendanceList attendance_list;
            // Create the SQL query with placeholders
            String selectQuery = "SELECT * FROM attendance WHERE employee_id = ?";
            
            
            // Create a connection
            ConnectionProvider dbc = new ConnectionProvider();
            String jdbcDriver = dbc.getJdbcDriver();
            String dbConnectionURL = dbc.getDbConnectionURL();
            String dbUsername = dbc.getDbUsername();
            String dbPassword = dbc.getDbPassword();
            Class.forName(jdbcDriver);
            Connection connection = DriverManager.getConnection(dbConnectionURL, dbUsername, dbPassword);

            // Create the PreparedStatement
            
            PreparedStatement statement = connection.prepareStatement(selectQuery);
            
            statement.setInt(1, employee_id);
            rs = statement.executeQuery();
            while(rs.next()){
                attendance_list = new AttendanceList(rs.getDate("date"),rs.getTime("time_in"), rs.getTime("time_out"));
                attendanceArrayList.add(attendance_list);
            }
            return attendanceArrayList;
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeeAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
      private void showEmployeeAttendance() throws SQLException {
    attendanceArrayList = this.getAttendanceList();
    model = (DefaultTableModel) this.attendance_list_table.getModel();
    Object[] row = new Object[3];

    model.setRowCount(0);

    for (int i = 0; i < attendanceArrayList.size(); i++) {
        Date attendanceDate = attendanceArrayList.get(i).getDate();
        
        // Check if the date is null before formatting
        if (attendanceDate != null) {
            // Make the date as a readable string format
            String formattedDate = dateFormat.format(attendanceDate);
            
            String formattedTimeIn = Utils.convertTimeToReadable(attendanceArrayList.get(i).getTimeIn());
            
            // Check if the time out is null before formatting
            String formattedTimeOut = attendanceArrayList.get(i).getTimeOut() != null
                    ? Utils.convertTimeToReadable(attendanceArrayList.get(i).getTimeOut())
                    : "";
            
            row[0] = formattedDate;
            row[1] = formattedTimeIn;
            row[2] = formattedTimeOut;
            model.addRow(row);
        }
    }
}

    
    private boolean isAlreadyMarked(int employeeId, String date, String column) throws SQLException {
        try {
            ConnectionProvider dbc = new ConnectionProvider();
            String jdbcDriver = dbc.getJdbcDriver();
            String dbConnectionURL = dbc.getDbConnectionURL();
            String dbUsername = dbc.getDbUsername();
            String dbPassword = dbc.getDbPassword();
            Class.forName(jdbcDriver);
            con = DriverManager.getConnection(dbConnectionURL, dbUsername, dbPassword);
             ps = con.prepareStatement(
                     "SELECT " + column + " FROM attendance WHERE employee_id = ? AND date = ?"); 
            ps.setInt(1, employeeId);
            ps.setString(2, date);
            rs = ps.executeQuery();
            return rs.next() && rs.getString(column) != null;
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeeAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }    

//insert attendance if button time in and time out is clicked
    public void markAttendance(int employee_id, String date, String column, boolean isTimeIn) throws SQLException{
      try {
        // Check for null values
        if (employee_id <= 0 || date == null || column == null) {
            System.out.println("Invalid input values.");
            return;
        }

        // Create a connection
        ConnectionProvider dbc = new ConnectionProvider();
        String jdbcDriver = dbc.getJdbcDriver();
        String dbConnectionURL = dbc.getDbConnectionURL();
        String dbUsername = dbc.getDbUsername();
        String dbPassword = dbc.getDbPassword();
        Class.forName(jdbcDriver);
        con = DriverManager.getConnection(dbConnectionURL, dbUsername, dbPassword);

        if (isTimeIn) {
            // Handle Time In
            try (PreparedStatement insertStatement = con.prepareStatement(
                    "INSERT INTO attendance (employee_id, date, " + column + ") VALUES (?, ?, ?)"
            )) {
                insertStatement.setInt(1, employee_id);
                insertStatement.setString(2, date);
                insertStatement.setString(3, new SimpleDateFormat("HH:mm:ss").format(new Date()));
                insertStatement.executeUpdate();
                System.out.println("Time In Inserted");
            } catch (SQLException insertException) {
                // Handle the insert exception
                insertException.printStackTrace();
            }
        } else {
            // Handle Time Out
            try (PreparedStatement updateStatement = con.prepareStatement(
                    "UPDATE attendance SET " + column + " = ? WHERE employee_id = ? AND date = ?"
            )) {
                updateStatement.setString(1, new SimpleDateFormat("HH:mm:ss").format(new Date()));
                updateStatement.setInt(2, employee_id);
                updateStatement.setString(3, date);
                updateStatement.executeUpdate();
                System.out.println("Time Out Updated");
            } catch (SQLException updateException) {
                // Handle the update exception
                updateException.printStackTrace();
            }
        }
    } catch (ClassNotFoundException | SQLException ex) {
        // Handle the outer exception
        ex.printStackTrace();
    } finally {
        // Close the connection in the finally block
        if (con != null) {
            try {
                con.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String currentDate = dateFormat.format(new Date());
            if (isAlreadyMarked(employee_id, currentDate, "time_in")) {
                JOptionPane.showMessageDialog(null, "Already marked time in for today.", "Time In Error", JOptionPane.INFORMATION_MESSAGE);     
            } else {
                markAttendance(employee_id, currentDate, "time_in",true);
                this.showEmployeeAttendance();
                JOptionPane.showMessageDialog(this, "Time In marked successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String currentDate = dateFormat.format(new Date());

        try {
            if (!isAlreadyMarked(employee_id, currentDate, "time_in")) {
                JOptionPane.showMessageDialog(this, "Please mark Time In first.", "Error", JOptionPane.INFORMATION_MESSAGE);
            } else if(isAlreadyMarked(employee_id, currentDate, "time_out")){
                JOptionPane.showMessageDialog(this, "Time Out Already Marked", "Error", JOptionPane.INFORMATION_MESSAGE);
            }else {
                markAttendance(employee_id, currentDate, "time_out",false);
                this.showEmployeeAttendance();
                JOptionPane.showMessageDialog(this, "Time Out marked successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        editemployee employee = new editemployee();
        employee.pack();
        employee.setLocationRelativeTo(null);
        employee.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void attendance_list_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendance_list_tableMouseClicked
        //         DefaultTableModel RecordTable = (DefaultTableModel) this.employeeListTable.getModel();
        //    int SelectedRows = this.employeeListTable.getSelectedRow();
        //    employee_id_field.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        //     name_field.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        //    address_field.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        //    phone_field.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        //    gender_combo_box.setSelectedItem(RecordTable.getValueAt(SelectedRows, 4).toString());
    }//GEN-LAST:event_attendance_list_tableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        java.util.Date selectedDate = this.date_chooser.getDate();
        String formattedDate = dateFormat.format(selectedDate);
        Utils.filterSearch(formattedDate, attendance_list_table,0);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address_label;
    private javax.swing.JTable attendance_list_table;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JLabel department_label;
    private javax.swing.JLabel file_label;
    private javax.swing.JLabel gender_label;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel phone_number_label;
    // End of variables declaration//GEN-END:variables
}
